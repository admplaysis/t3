@model SGI.Areas.PlugAndPlay.Models.FilaProducao
@using System.Web
@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "formNovoItem" }))
{
    @Html.AntiForgeryToken()
<div class="row">
    @Html.HiddenFor(model => model.OrderId)
    <input type="hidden" name="SequencaRepeticao" value="1" />
    <div class="form-group col-md-4">
        @Html.LabelFor(model => model.Roteiro.ProdutoId, htmlAttributes: new { @class = "form-label" })
        <div class="controls">
            @Html.TextBoxFor(model => model.Roteiro.ProdutoId, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group col-md-4">
        @Html.LabelFor(model => model.Roteiro.MaquinaId, htmlAttributes: new { @class = "form-label" })
        <div class="controls">
            @Html.DropDownList("Roteiro.MaquinaId", null, "", htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group col-md-2">
        <label class="form-label">Seq. Transf.</label>
        <div class="controls">
            @Html.TextBoxFor(model => model.Roteiro.SequenciaTransformacao, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group col-md-2">
        @Html.LabelFor(model => model.Roteiro.PecasPorPulso, htmlAttributes: new { @class = "form-label" })
        <div class="controls">
            @Html.TextBoxFor(model => model.Roteiro.PecasPorPulso, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group col-md-3">
        @Html.LabelFor(model => model.DataInicioPrevista, htmlAttributes: new { @class = "form-label" })
        <div class="controls">
            @Html.EditorFor(model => model.DataInicioPrevista, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataInicioPrevista, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-3">
        @Html.LabelFor(model => model.DataFimPrevista, htmlAttributes: new { @class = "form-label" })
        <div class="controls">
            @Html.EditorFor(model => model.DataFimPrevista, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataFimPrevista, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-2">
        @Html.LabelFor(model => model.DataFimMaxima, htmlAttributes: new { @class = "form-label" })
        <div class="controls">
            @Html.EditorFor(model => model.DataFimMaxima, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataFimMaxima, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-2">
        @Html.LabelFor(model => model.ObservacaoProducao, htmlAttributes: new { @class = "form-label" })
        <div class="controls">
            @Html.EditorFor(model => model.ObservacaoProducao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ObservacaoProducao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-2">
        @Html.LabelFor(model => model.QuantidadePrevista, htmlAttributes: new { @class = "form-label" })
        <div class="controls">
            @Html.EditorFor(model => model.QuantidadePrevista, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuantidadePrevista, "", new { @class = "text-danger" })
        </div>
    </div>

</div>
    <div class="row">
        <div class="form-group col-md-12">
            <div class="text-right">
                <button data-group="btnCancelar"  type="button" class="btn btn-default">
                    <i class="fa fa-times" aria-hidden="true"></i>
                </button>
                <button data-group="btnSalvar" id="btnSalvar" type="button" class="btn btn-default" >
                    <i class="fa fa-floppy-o" aria-hidden="true"></i>
                </button>
            </div>
        </div>
    </div>
}

