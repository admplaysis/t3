@model SGI.Models.T_USER_GRUPO

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title">Remover grupo da meta</h4>
    </div>
    @using (Html.BeginForm("GrupoUserDel", "Usuario", FormMethod.Post, new { id = "formGrupoDel", name = "formGrupoDel" }))
    {
        <div class="modal-body">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(x => x.ID_USUARIO)
            @Html.HiddenFor(x => x.GRPUSER_ID)
            @Html.HiddenFor(x => x.GRU_ID)
            <div class="row">
                <div class="col-md-8 col-sm-9 col-xs-10">
                    <div class="form-group">
                        <label class="form-label">Nome</label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.T_Grupo.NOME, new { @class = "form-control", @readonly = true })
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="modal-footer text-center">
            <button data-dismiss="modal" class="btn btn-default" type="button">Fechar</button>
            <button class="btn btn-success" type="submit">Confirmar</button>
        </div>
    }
</div>

<script type="text/javascript">
    $('#formGrupoDel').submit(function () { // catch the form's submit event
        $.ajax({ // create an AJAX call...
            data: $(this).serialize(), // get the form data
            type: $(this).attr('method'), // GET or POST
            url: $(this).attr('action'), // the file to call
            success: function (response) { // on success..
                location.reload();
            },
            error: function()
            {
                location.reload();
            }
        });
        return false; // cancel original event to prevent form submitting
    });
</script>